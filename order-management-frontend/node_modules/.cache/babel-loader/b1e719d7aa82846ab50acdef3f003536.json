{"ast":null,"code":"import { API } from \"../config\";\nexport const createCategory = (userId, token, category) => {\n  return fetch(\"\".concat(API, \"/category/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const createProduct = (userId, token, product) => {\n  return fetch(\"\".concat(API, \"/product/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getCategories = () => {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listOrders = (userId, token) => {\n  return fetch(\"\".concat(API, \"/order/list/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getStatusValues = (userId, token) => {\n  return fetch(\"\".concat(API, \"/order/status-values/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(\"\".concat(API, \"/order/\").concat(orderId, \"/status/\").concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n  return fetch(\"\".concat(API, \"/products?limit=undefined\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getProduct = productId => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["G:/Navtech-assessment/order-management-frontend/src/admin/apiAdmin.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createProduct","product","getCategories","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId","getProduct","updateProduct"],"mappings":"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","sourcesContent":["import { API } from \"../config\";\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}